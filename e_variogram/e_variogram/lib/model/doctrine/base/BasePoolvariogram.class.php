<?php

/**
 * BasePoolvariogram
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property decimal $lag_one
 * @property decimal $lag_two
 * @property decimal $lag_three
 * @property decimal $lag_four
 * @property decimal $lag_five
 * @property decimal $lag_six
 * @property decimal $lag_seven
 * @property string $model
 * @property decimal $nugget
 * @property decimal $psill
 * @property decimal $prange
 * @property decimal $kappa
 * @property decimal $N_exp
 * @property integer $casestudy_id
 * @property Casestudy $Casestudy
 * 
 * @method decimal       getLagOne()       Returns the current record's "lag_one" value
 * @method decimal       getLagTwo()       Returns the current record's "lag_two" value
 * @method decimal       getLagThree()     Returns the current record's "lag_three" value
 * @method decimal       getLagFour()      Returns the current record's "lag_four" value
 * @method decimal       getLagFive()      Returns the current record's "lag_five" value
 * @method decimal       getLagSix()       Returns the current record's "lag_six" value
 * @method decimal       getLagSeven()     Returns the current record's "lag_seven" value
 * @method string        getModel()        Returns the current record's "model" value
 * @method decimal       getNugget()       Returns the current record's "nugget" value
 * @method decimal       getPsill()        Returns the current record's "psill" value
 * @method decimal       getPrange()       Returns the current record's "prange" value
 * @method decimal       getKappa()        Returns the current record's "kappa" value
 * @method decimal       getNExp()         Returns the current record's "N_exp" value
 * @method integer       getCasestudyId()  Returns the current record's "casestudy_id" value
 * @method Casestudy     getCasestudy()    Returns the current record's "Casestudy" value
 * @method Poolvariogram setLagOne()       Sets the current record's "lag_one" value
 * @method Poolvariogram setLagTwo()       Sets the current record's "lag_two" value
 * @method Poolvariogram setLagThree()     Sets the current record's "lag_three" value
 * @method Poolvariogram setLagFour()      Sets the current record's "lag_four" value
 * @method Poolvariogram setLagFive()      Sets the current record's "lag_five" value
 * @method Poolvariogram setLagSix()       Sets the current record's "lag_six" value
 * @method Poolvariogram setLagSeven()     Sets the current record's "lag_seven" value
 * @method Poolvariogram setModel()        Sets the current record's "model" value
 * @method Poolvariogram setNugget()       Sets the current record's "nugget" value
 * @method Poolvariogram setPsill()        Sets the current record's "psill" value
 * @method Poolvariogram setPrange()       Sets the current record's "prange" value
 * @method Poolvariogram setKappa()        Sets the current record's "kappa" value
 * @method Poolvariogram setNExp()         Sets the current record's "N_exp" value
 * @method Poolvariogram setCasestudyId()  Sets the current record's "casestudy_id" value
 * @method Poolvariogram setCasestudy()    Sets the current record's "Casestudy" value
 * 
 * @package    eVar
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePoolvariogram extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('poolvariogram');
        $this->hasColumn('lag_one', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('lag_two', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('lag_three', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('lag_four', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('lag_five', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('lag_six', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('lag_seven', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('model', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('nugget', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('psill', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('prange', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('kappa', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('N_exp', 'decimal', 20, array(
             'type' => 'decimal',
             'scale' => 3,
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('casestudy_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Casestudy', array(
             'local' => 'casestudy_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}